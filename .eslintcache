[{"C:\\Users\\MSI\\Desktop\\Alejito\\movies_directory\\src\\index.js":"1","C:\\Users\\MSI\\Desktop\\Alejito\\movies_directory\\src\\App.js":"2","C:\\Users\\MSI\\Desktop\\Alejito\\movies_directory\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":9818,"mtime":1612151462241,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1a8bxrd",{"filePath":"11","messages":"12","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"C:\\Users\\MSI\\Desktop\\Alejito\\movies_directory\\src\\index.js",[],["16","17"],"C:\\Users\\MSI\\Desktop\\Alejito\\movies_directory\\src\\App.js",["18","19","20","21","22","23","24","25","26","27","28"],"import React from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport Carousel from 'react-material-ui-carousel';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport { ModalContent, ModalFooter, ModalButton, useDialog } from 'react-st-modal';\nimport { CustomDialog} from 'react-st-modal';\nimport ReactStars from \"react-rating-stars-component\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 345,\n    minHeight:350\n  },\n  media: {\n    height: 220,\n    width:'100%'\n  },\n});\n\n\nfunction CustomDialogContent(props) {\n  // use this hook to control the dialog\n  console.log(\"propsDialog\",props);\n\n  var [movie,setMovie] = React.useState({});\n  const dialog = useDialog();\n  var result =\"\"\n  var genres = \"\";\n  const [value, setValue] = React.useState();\n\n  React.useEffect(() => {\n    const getInfoMovie = async () => {\n      result = await axios.post('http://192.168.1.51:3001/getMovieId', {\n       \"movie_id\":props.id\n     });\n \n     setMovie(result.data);\n     \n   }\n \n   getInfoMovie();\n\n  },[])\n  \n  for(var i in movie.genres){\n    genres += \" - \"+movie.genres[i].name;\n  }\n\n  if(movie === {}){\n    return \"\";\n  }else{\n    return (\n      <div>\n        <ModalContent>\n            <div style={{fontSize:'large'}}>{movie.tagline}</div>\n            <div style={{display:'flex'}}>{genres}</div>\n            <div>\n            <img src={\"https://image.tmdb.org/t/p/w500/\"+movie.backdrop_path}/>\n            </div>\n            <div>\n            <label>\n              {movie.overview}\n            </label>\n            </div>\n            <div>\n            \n            </div>\n          </ModalContent>\n          <ModalFooter>\n            <ModalButton\n              onClick={() => {\n                dialog.close(value);\n              }}\n            >\n              OK\n            </ModalButton>\n          </ModalFooter>\n        </div>\n    );\n  }\n\n  \n}\n\n\nfunction Item(props)\n{\n    const classes = useStyles();\n    return (\n      <>\n          <Card className={classes.root}>\n            <CardActionArea>\n              <CardMedia\n                className={classes.media}\n                image={\"https://image.tmdb.org/t/p/w500/\"+props.item.backdrop_path}\n                title=\"Contemplative Reptile\"\n              />\n              <CardContent style={{backgroundColor:'#e4e5e6'}}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {props.item.title}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  {\"Release date: \"+props.item.release_date}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions style={{justifyContent:'center'}}>\n              <Button size=\"small\" color=\"primary\" onClick={ () => {\n                  const result = CustomDialog(\n                    <CustomDialogContent  id={props.item.id}/>,\n                    {\n                      title: props.item.title,\n                      showCloseIcon: true,\n                    }\n                  );\n                }}>\n                Learn More\n              </Button>\n            </CardActions>\n          </Card> \n       </>   \n    )\n}\n\nfunction App() {\n  const [elements, setElements] = React.useState([]);\n  const [elementsLatest, setElementsLatest] = React.useState([]);\n  const [elementsUpcoming, setElementsUpcoming] = React.useState([]);\n  const [elementsTopRated, setElementsTopRated] = React.useState([]);\n\n  React.useEffect(() => {\n    const getMovies = async () => {\n      const result = await axios(\n        'http://192.168.1.51:3001/getMovies',\n      );\n\n\n      let datos = result.data;\n      let movies = datos.results;\n      var i,j,temparray,chunk = 5;\n      for (i=0,j=movies.length; i<j; i+=chunk) {\n        temparray = movies.slice(i,i+chunk);\n        \n\n        setElements(elements => [...elements,{movies:temparray}])\n      }\n\n    }\n\n    const getLatestMovies = async () => {\n      const result2 = await axios(\n        'http://192.168.1.51:3001/getLatestMovies',\n      );\n        console.log(\"result2\",result2.data);\n\n      let datos = result2.data;\n      let movies = datos.results;\n      var i,j,temparray,chunk = 5;\n      for (i=0,j=movies.length; i<j; i+=chunk) {\n        temparray = movies.slice(i,i+chunk);\n        \n\n        setElementsLatest(elementsLatest => [...elementsLatest,{movies:temparray}])\n\n      }\n \n    }\n\n    const getUpcomingMovies = async () => {\n      const result3 = await axios(\n        'http://192.168.1.51:3001/getUpcomingMovies',\n      );\n        console.log(\"result3\",result3.data);\n\n      let datos = result3.data;\n      let movies = datos.results;\n      var i,j,temparray,chunk = 5;\n      for (i=0,j=movies.length; i<j; i+=chunk) {\n        temparray = movies.slice(i,i+chunk);\n        \n\n        setElementsUpcoming(elementsUpcoming => [...elementsUpcoming,{movies:temparray}])\n\n      }\n\n    }\n\n    const getTopRatedMovies = async () => {\n      const result4 = await axios(\n        'http://192.168.1.51:3001/getTopRatedMovies',\n      );\n        console.log(\"result4\",result4.data);\n\n      let datos = result4.data;\n      let movies = datos.results;\n      var i,j,temparray,chunk = 5;\n      for (i=0,j=movies.length; i<j; i+=chunk) {\n        temparray = movies.slice(i,i+chunk);\n        \n\n        setElementsTopRated(elementsTopRated => [...elementsTopRated,{movies:temparray}])\n\n      }\n   \n    }\n\n    getTopRatedMovies();\n    getUpcomingMovies();\n    getLatestMovies();\n\n    getMovies();\n\n  },[])\n\n  var items = [\n      {\n          name: \"Random Name #1\",\n          description: \"Probably the most random thing you have ever seen!\"\n      },\n      {\n          name: \"Random Name #2\",\n          description: \"Hello World!\"\n      }\n\n  ]\n\n  return (\n    \n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\"} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          The Movie Database\n        </p>\n      </header>\n        <div>\n        <Typography className=\"App-titles\" variant='h4'>\n                  Popular Movies\n        </Typography>\n        \n        <Carousel className=\"App-carrusel\">\n            {\n\n              elements.map( (item,i) => {return(\n                <div>\n                  <Grid item md={12} sm={12} xs={12}>   \n                  <Grid style={{display:'flex'}}>\n                    {\n                      item.movies.map((movie,j) => (\n                        (<Grid item md={3} sm={12} xs={12}>\n                          <Item key={movie.id} item={movie}/> \n\n                        </Grid>)\n                      ))\n                    }\n                  </Grid>\n                </Grid>\n                </div>\n                \n              )})\n            }\n        </Carousel>\n        </div>\n        <div>\n        <Typography className=\"App-titles\" variant='h4'>\n                  Now Playing Movies\n        </Typography>\n        <Carousel className=\"App-carrusel\">\n            {\n\n              elementsLatest.map( (item,i) => {return(\n                <div>\n                  <Grid item md={12} sm={12} xs={12}>   \n                  <Grid style={{display:'flex'}}>\n                    {\n                      item.movies.map((movie,j) => (\n                        (<Grid item md={3} sm={12} xs={12}>\n                          <Item key={movie.id} item={movie}/> \n\n                        </Grid>)\n                      ))\n                    }\n                  </Grid>\n                </Grid>\n                </div>\n                \n              )})\n            }\n        </Carousel>\n        </div>\n        <div>\n        <Typography className=\"App-titles\" variant='h4'>\n                  Upcoming Movies\n        </Typography>\n        <Carousel className=\"App-carrusel\">\n            {\n\n              elementsUpcoming.map( (item,i) => {return(\n                <div>\n                  <Grid item md={12} sm={12} xs={12}>   \n                  <Grid style={{display:'flex'}}>\n                    {\n                      item.movies.map((movie,j) => (\n                        (<Grid item md={3} sm={12} xs={12}>\n                          <Item key={movie.id} item={movie}/> \n\n                        </Grid>)\n                      ))\n                    }\n                  </Grid>\n                </Grid>\n                </div>\n                \n              )})\n            }\n        </Carousel>\n        </div>\n        <div>\n        <Typography className=\"App-titles\" variant='h4'>\n                  Top Rated Movies\n        </Typography>\n        <Carousel className=\"App-carrusel\">\n            {\n\n              elementsTopRated.map( (item,i) => {return(\n                <div>\n                  <Grid item md={12} sm={12} xs={12}>   \n                  <Grid style={{display:'flex'}}>\n                    {\n                      item.movies.map((movie,j) => (\n                        (<Grid item md={3} sm={12} xs={12}>\n                          <Item key={movie.id} item={movie}/> \n\n                        </Grid>)\n                      ))\n                    }\n                  </Grid>\n                </Grid>\n                </div>\n                \n              )})\n            }\n        </Carousel>\n        </div>\n      \n    </div>\n    \n  );\n}\n\nexport default App;\n","C:\\Users\\MSI\\Desktop\\Alejito\\movies_directory\\src\\reportWebVitals.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":2,"column":8,"nodeType":"35","messageId":"36","endLine":2,"endColumn":12},{"ruleId":"33","severity":1,"message":"37","line":17,"column":8,"nodeType":"35","messageId":"36","endLine":17,"endColumn":18},{"ruleId":"33","severity":1,"message":"38","line":39,"column":17,"nodeType":"35","messageId":"36","endLine":39,"endColumn":25},{"ruleId":"39","severity":1,"message":"40","line":43,"column":16,"nodeType":"41","endLine":45,"endColumn":8},{"ruleId":"42","severity":1,"message":"43","line":68,"column":13,"nodeType":"44","endLine":68,"endColumn":80},{"ruleId":"33","severity":1,"message":"45","line":119,"column":25,"nodeType":"35","messageId":"36","endLine":119,"endColumn":31},{"ruleId":"46","severity":1,"message":"47","line":155,"column":21,"nodeType":"48","messageId":"49","endLine":155,"endColumn":65},{"ruleId":"46","severity":1,"message":"47","line":173,"column":27,"nodeType":"48","messageId":"49","endLine":173,"endColumn":83},{"ruleId":"46","severity":1,"message":"47","line":192,"column":29,"nodeType":"48","messageId":"49","endLine":192,"endColumn":89},{"ruleId":"46","severity":1,"message":"47","line":211,"column":29,"nodeType":"48","messageId":"49","endLine":211,"endColumn":89},{"ruleId":"33","severity":1,"message":"50","line":225,"column":7,"nodeType":"35","messageId":"36","endLine":225,"endColumn":12},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ReactStars' is defined but never used.","'setValue' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'result' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","AwaitExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'result' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'temparray'.","ArrowFunctionExpression","unsafeRefs","'items' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]